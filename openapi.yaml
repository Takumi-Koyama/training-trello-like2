openapi: 3.0.0
info:
  description: Trello-like Service API
  title: Trello like API
  version: "1.0"
servers:
- url: http://localhost:8080
tags:
- description: Card
  name: Card
- description: Column
  name: Column
paths:
  /cards/{cardId}:
    delete:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardId'
          description: |
            削除したカードのIDを返却します。
        "404":
          description: Not Found
        "422":
          description: Validation Error
      summary: |
        カードを削除します。
        アーカイブ済みのもののみ削除できます。
        アーカイブ済みでないものを指定した場合、422を返します。
        指定したカードが存在しない場合、404を返します。
      tags:
      - Card
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
          description: |
            カードの詳細情報を返却します。
        "404":
          description: Not Found
      summary: |
        カードの詳細情報を表示します。
        指定したカードが存在しない場合、404を返します。
      tags:
      - Card
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
          description: |
            更新したカードを返却します。
        "404":
          description: Not Found
        "422":
          description: Validation Error
      summary: |
        カードの内容（タイトル、説明文）を更新します。
        指定したカードが存在しない場合、404を返します。
        タイトルは必須項目です。タイトルの入力がなかった場合、422を返します。
      tags:
      - Card
  /cards:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
          description: |
            作成したカードを返却します。
        "404":
          description: NOT FOUND
        "422":
          description: Validation Error
      summary: |
        新規にカードを作成します。
        所属するカラムのID（columnId）は必須です。
        存在しないカラムのIDを指定した場合、404を返却します。
        orderを指定しなかった場合、カラムの最後尾に追加されます。
      tags:
      - Card
  /cards/{cardId}/archive:
    patch:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardId'
          description: |
            アーカイブしたカードのIDを返却します。
        "404":
          description: Not Found
      summary: |
        カードをアーカイブします。
        指定したカードが存在しない場合、404を返します。
      tags:
      - Card
  /cards/{cardId}/deadline:
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardDeadlineUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
          description: |
            更新したカードを返却します。
        "404":
          description: Not Found
        "422":
          description: Validation Error
      summary: |
        カードの締切日を更新します。
        指定したカードが存在しない場合、404を返します。
        締切日が過去の日付だった場合、422を返します。
      tags:
      - Card
  /cards/{cardId}/move:
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardMoveRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
          description: |
            移動したカードを返却します。
        "404":
          description: Not Found
      summary: |
        カードを任意のカラムの、任意の順序へ移動します。
        所属するカラムのID（columnId）は必須です。
        orderを指定しなかった場合、あるいは妥当な値で無い場合、カラムの最後尾に追加されます。
        指定したカードが存在しない場合、404を返します。
        移動先のカラムが存在しない場合、404を返します。
      tags:
      - Card
  /columns/{columnId}:
    delete:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ColumnId'
          description: 削除したカラムのIDを返します
        "404":
          description: Not Found
        "422":
          description: Validation Error
      summary: |
        カラムを削除します。
        紐づいているカードが存在する場合（アーカイブ済みのものを除く）、カラムを削除することはできません。
        この場合、422を返します。
        紐づいているアーカイブ済みのカードは、同時に全て削除されます。
        指定したカラムが存在しない場合、404を返します。
      tags:
      - Column
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Column'
          description: 取得したカラムを返します
        "404":
          description: Not Found
      summary: |
        指定したカラムと、それに紐づくカードを返却します。
        カードは order の昇順で取得されます。
        指定したカラムが存在しない場合、404を返します。
      tags:
      - Column
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ColumnUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Column'
          description: 更新したカラムを返します
        "404":
          description: Not Found
        "422":
          description: Validation Error
      summary: |
        カラムのタイトルを更新します。
        タイトルは必須項目です。タイトルが入力されていない場合、422を返します。
        指定したカラムが存在しない場合、404を返します。
      tags:
      - Column
  /columns/{columnId}/move:
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ColumnMoveRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Column'
          description: 移動したカラムを返却します
        "404":
          description: Not Found
      summary: |
        カラム任意の順序へ移動します。
        orderを指定しなかった場合、あるいは妥当な値で無い場合、最後尾に追加されます。
        指定したカラムが存在しない場合、404を返します。
      tags:
      - Column
  /columns:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ColumnsCards'
          description: |
            取得したカラムの一覧を返却します。
      summary: |
        全カラムと、それに紐づくカードもすべて取得します。
      tags:
      - Column
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ColumnCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Column'
          description: |
            作成したカラムを返却します。
        "422":
          description: Validation Error
      summary: |
        カラムを新規に作成します。
        タイトルは必須項目です。タイトルが入力されていない場合、422を返します。
        orderを指定しなかった場合、最後尾に追加されます。
      tags:
      - Column
components:
  schemas:
    CardUpdateRequest:
      example:
        description: description
        title: title
      properties:
        title:
          type: string
        description:
          nullable: true
          type: string
      required:
      - description
      - title
      type: object
    Card:
      example:
        createdAt: createdAt
        columnId: columnId
        isArchived: true
        description: description
        id: id
        title: title
        deadline: deadline
        order: 0
        updatedAt: updatedAt
      properties:
        id:
          type: string
        columnId:
          type: string
        title:
          type: string
        description:
          nullable: true
          type: string
        order:
          type: integer
        deadline:
          nullable: true
          type: string
        isArchived:
          type: boolean
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
      - columnId
      - createdAt
      - deadline
      - description
      - id
      - isArchived
      - order
      - title
      - updatedAt
      type: object
    CardId:
      example:
        id: id
      properties:
        id:
          type: string
      required:
      - id
      type: object
    CardCreateRequest:
      example:
        columnId: columnId
        description: description
        title: title
        order: 0
      properties:
        columnId:
          type: string
        title:
          type: string
        description:
          nullable: true
          type: string
        order:
          nullable: true
          type: integer
      required:
      - columnId
      - description
      - order
      - title
      type: object
    CardDeadlineUpdateRequest:
      example:
        deadline: deadline
      properties:
        deadline:
          type: string
      required:
      - deadline
      type: object
    CardMoveRequest:
      example:
        columnId: columnId
        order: 0
      properties:
        columnId:
          type: string
        order:
          nullable: true
          type: integer
      required:
      - columnId
      - order
      type: object
    ColumnUpdateRequest:
      example:
        title: title
      properties:
        title:
          type: string
      required:
      - title
      type: object
    Column:
      example:
        createdAt: createdAt
        cards:
        - description: description
          id: id
          title: title
          order: 6
        - description: description
          id: id
          title: title
          order: 6
        id: id
        title: title
        order: 0
        updatedAt: updatedAt
      properties:
        id:
          type: string
        title:
          type: string
        order:
          type: integer
        cards:
          items:
            $ref: '#/components/schemas/CardItem'
          type: array
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
      - cards
      - createdAt
      - id
      - order
      - title
      - updatedAt
      type: object
    ColumnId:
      example:
        id: id
      properties:
        id:
          type: string
      required:
      - id
      type: object
    ColumnMoveRequest:
      example:
        order: 0
      properties:
        order:
          type: integer
      required:
      - order
      type: object
    ColumnsCards:
      example:
        columns:
        - createdAt: createdAt
          cards:
          - description: description
            id: id
            title: title
            order: 6
          - description: description
            id: id
            title: title
            order: 6
          id: id
          title: title
          order: 0
          updatedAt: updatedAt
        - createdAt: createdAt
          cards:
          - description: description
            id: id
            title: title
            order: 6
          - description: description
            id: id
            title: title
            order: 6
          id: id
          title: title
          order: 0
          updatedAt: updatedAt
      properties:
        columns:
          items:
            $ref: '#/components/schemas/Column'
          type: array
      required:
      - columns
      type: object
    ColumnCreateRequest:
      example:
        title: title
        order: 0
      properties:
        title:
          type: string
        order:
          nullable: true
          type: integer
      required:
      - order
      - title
      type: object
    CardItem:
      example:
        description: description
        id: id
        title: title
        order: 6
      properties:
        id:
          type: string
        title:
          type: string
        description:
          nullable: true
          type: string
        order:
          type: integer
      required:
      - description
      - id
      - order
      - title
      type: object
